{"is_source_file": true, "format": "Python", "description": "This file defines a WatcherAgent class that reads a local PDF file and extracts a description text using PyPDF2. It includes logic for handling errors, extracting text from the first few pages, and heuristically identifying the description section or fallback paragraphs.", "external_files": ["os", "re", "typing.Optional", "PyPDF2"], "external_methods": ["PyPDF2.PdfReader", "page.extract_text"], "published": ["WatcherResult", "WatcherAgent"], "classes": [{"name": "WatcherResult", "description": "Represents the result of extracting a description from a PDF, including success status and optional detail fields."}, {"name": "WatcherAgent", "description": "Provides functionality to open a PDF file, extract text, and heuristically find a description section."}], "methods": [{"name": "WatcherResult get_description_from_pdf(self, pdf_path: str)", "description": "Main method to be called externally for extracting a description from a specified PDF path.", "scope": "WatcherAgent", "scopeKind": "class"}, {"name": "str _extract_text_with_pypdf2(self, path: str)", "description": "Internal helper to extract text from the first few pages of the PDF document.", "scope": "WatcherAgent", "scopeKind": "class"}, {"name": "str _find_description_block(self, text: str)", "description": "Heuristic to locate the 'Description' section or fallback paragraph in the extracted text.", "scope": "WatcherAgent", "scopeKind": "class"}, {"name": "bool _looks_like_heading(self, line: str)", "description": "Heuristic to determine if a line resembles a heading based on length and formatting.", "scope": "WatcherAgent", "scopeKind": "class"}, {"name": "str _normalize_paragraphs(self, lines: list[str])", "description": "Joins multiple lines into coherent paragraphs, normalized for easier processing.", "scope": "WatcherAgent", "scopeKind": "class"}], "calls": ["PyPDF2.PdfReader", "page.extract_text"], "search-terms": ["PDF text extraction", "description heuristic", "PyPDF2", "watcher agent", "local PDF processing", "extract description"], "state": 2, "file_id": 20, "knowledge_revision": 57, "git_revision": "e96b276f7abdd72f801c7fd0352e9f4789153ba7", "revision_history": [{"41": ""}, {"55": "1daea3777d9a4ac77b3108e130cf7c15c2eb3f73"}, {"57": "e96b276f7abdd72f801c7fd0352e9f4789153ba7"}], "ctags": [{"_type": "tag", "name": "PyPDF2", "path": "/home/kavia/workspace/code-generation/youtube-lyrics-generator-2745-2754/python_console_app/api/agents/watcher_agent.py", "pattern": "/^    PyPDF2 = None  # type: ignore$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "WatcherAgent", "path": "/home/kavia/workspace/code-generation/youtube-lyrics-generator-2745-2754/python_console_app/api/agents/watcher_agent.py", "pattern": "/^class WatcherAgent:$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "WatcherResult", "path": "/home/kavia/workspace/code-generation/youtube-lyrics-generator-2745-2754/python_console_app/api/agents/watcher_agent.py", "pattern": "/^class WatcherResult:$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "_extract_text_with_pypdf2", "path": "/home/kavia/workspace/code-generation/youtube-lyrics-generator-2745-2754/python_console_app/api/agents/watcher_agent.py", "pattern": "/^    def _extract_text_with_pypdf2(self, path: str) -> str:$/", "language": "Python", "typeref": "typename:str", "kind": "member", "signature": "(self, path: str)", "scope": "WatcherAgent", "scopeKind": "class"}, {"_type": "tag", "name": "_find_description_block", "path": "/home/kavia/workspace/code-generation/youtube-lyrics-generator-2745-2754/python_console_app/api/agents/watcher_agent.py", "pattern": "/^    def _find_description_block(self, text: str) -> str:$/", "language": "Python", "typeref": "typename:str", "kind": "member", "signature": "(self, text: str)", "scope": "WatcherAgent", "scopeKind": "class"}, {"_type": "tag", "name": "_looks_like_heading", "path": "/home/kavia/workspace/code-generation/youtube-lyrics-generator-2745-2754/python_console_app/api/agents/watcher_agent.py", "pattern": "/^    def _looks_like_heading(self, line: str) -> bool:$/", "language": "Python", "typeref": "typename:bool", "kind": "member", "signature": "(self, line: str)", "scope": "WatcherAgent", "scopeKind": "class"}, {"_type": "tag", "name": "_normalize_paragraphs", "path": "/home/kavia/workspace/code-generation/youtube-lyrics-generator-2745-2754/python_console_app/api/agents/watcher_agent.py", "pattern": "/^    def _normalize_paragraphs(self, lines: list[str]) -> str:$/", "language": "Python", "typeref": "typename:str", "kind": "member", "signature": "(self, lines: list[str])", "scope": "WatcherAgent", "scopeKind": "class"}, {"_type": "tag", "name": "description", "path": "/home/kavia/workspace/code-generation/youtube-lyrics-generator-2745-2754/python_console_app/api/agents/watcher_agent.py", "pattern": "/^    description: Optional[str] = None$/", "language": "Python", "typeref": "typename:Optional[str]", "kind": "variable", "scope": "WatcherResult", "scopeKind": "class"}, {"_type": "tag", "name": "details", "path": "/home/kavia/workspace/code-generation/youtube-lyrics-generator-2745-2754/python_console_app/api/agents/watcher_agent.py", "pattern": "/^    details: Optional[str] = None$/", "language": "Python", "typeref": "typename:Optional[str]", "kind": "variable", "scope": "WatcherResult", "scopeKind": "class"}, {"_type": "tag", "name": "error", "path": "/home/kavia/workspace/code-generation/youtube-lyrics-generator-2745-2754/python_console_app/api/agents/watcher_agent.py", "pattern": "/^    error: Optional[str] = None$/", "language": "Python", "typeref": "typename:Optional[str]", "kind": "variable", "scope": "WatcherResult", "scopeKind": "class"}, {"_type": "tag", "name": "get_description_from_pdf", "path": "/home/kavia/workspace/code-generation/youtube-lyrics-generator-2745-2754/python_console_app/api/agents/watcher_agent.py", "pattern": "/^    def get_description_from_pdf(self, pdf_path: str) -> WatcherResult:$/", "language": "Python", "typeref": "typename:WatcherResult", "kind": "member", "signature": "(self, pdf_path: str)", "scope": "WatcherAgent", "scopeKind": "class"}], "hash": "09770ce9c61fa1e020c58f0f6d15fdbf", "format-version": 4, "code-base-name": "python_console_app", "filename": "python_console_app/api/agents/watcher_agent.py", "fields": [{"name": "PyPDF2 = None  # type: ignore", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "Optional[str] description", "scope": "WatcherResult", "scopeKind": "class", "description": "unavailable"}, {"name": "Optional[str] details", "scope": "WatcherResult", "scopeKind": "class", "description": "unavailable"}, {"name": "Optional[str] error", "scope": "WatcherResult", "scopeKind": "class", "description": "unavailable"}]}