{"is_source_file": true, "format": "Python", "description": "This source file defines a Python class `WatcherAgent` that extracts descriptive text from PDF files using multiple backends, including PyPDF2, pdfplumber, PyMuPDF (fitz), and OCR via pytesseract. It implements fallback strategies and heuristic analysis to identify and return a 'Description' section or main paragraph from PDFs, especially handling malformed or scanned documents.", "external_files": ["PyPDF2", "pdfplumber", "fitz (PyMuPDF)", "pytesseract", "PIL (Pillow)", "io", "os", "re", "typing"], "external_methods": ["PyPDF2.PdfReader", "pdfplumber.open", "fitz.open", "page.get_text", "pytesseract.image_to_string", "Image.open"], "published": ["WatcherResult", "WatcherAgent"], "classes": [{"name": "WatcherResult", "description": "Data class that holds the result of PDF text extraction, including success flag, description, error message, and additional details."}, {"name": "WatcherAgent", "description": "Class responsible for extracting a description from a PDF file using multiple backends with fallback mechanisms and heuristic analysis."}], "methods": [{"name": "WatcherResult get_description_from_pdf(self, pdf_path: str)", "description": "Main method that orchestrates the extraction process, trying several backends in sequence and applying heuristics to find a description or paragraph.", "scope": "WatcherAgent", "scopeKind": "class"}, {"name": "str _extract_text_with_pypdf2(self, path: str)", "description": "Extracts text from a PDF using the PyPDF2 backend.", "scope": "WatcherAgent", "scopeKind": "class"}, {"name": "str _extract_text_with_pdfplumber(self, path: str)", "description": "Extracts text from a PDF using pdfplumber.", "scope": "WatcherAgent", "scopeKind": "class"}, {"name": "str _extract_text_with_pymupdf(self, path: str)", "description": "Extracts text from a PDF using PyMuPDF (fitz).", "scope": "WatcherAgent", "scopeKind": "class"}, {"name": "str _extract_text_with_ocr(self, path: str, max_pages: int = 3)", "description": "Performs OCR on PDF pages rendered to images to extract text, used as a fallback when other methods fail.", "scope": "WatcherAgent", "scopeKind": "class"}, {"name": "str _pick_best_text(self, candidates: List[str])", "description": "Selects the most substantial text among candidates, based on length.", "scope": "WatcherAgent", "scopeKind": "class"}, {"name": "str _normalize_whitespace(self, raw: str)", "description": "Normalizes whitespace and line breaks in extracted text.", "scope": "WatcherAgent", "scopeKind": "class"}, {"name": "str _find_description_block(self, text: str)", "description": "Heuristically searches for a 'Description' section or returns the first substantial paragraph.", "scope": "WatcherAgent", "scopeKind": "class"}, {"name": "bool _looks_like_heading(self, line: str)", "description": "Determines if a line appears to be a heading based on formatting heuristics.", "scope": "WatcherAgent", "scopeKind": "class"}, {"name": "str _normalize_paragraphs(self, lines: List[str])", "description": "Joins lines into paragraphs for heuristic processing.", "scope": "WatcherAgent", "scopeKind": "class"}, {"name": "str _build_guidance_message(self, errors: List[str])", "description": "Constructs an informative message to guide troubleshooting when text extraction fails.", "scope": "WatcherAgent", "scopeKind": "class"}], "calls": ["PyPDF2.PdfReader", "pdfplumber.open", "fitz.open", "page.get_text", "pytesseract.image_to_string", "Image.open"], "search-terms": ["PDF extraction", "multi-backend PDF parser", "heuristic description detection", "OCR fallback", "pytesseract", "PyMuPDF", "pdfplumber", "PyPDF2"], "state": 2, "file_id": 20, "knowledge_revision": 64, "git_revision": "9454c6751dc15463fc95698e521fb7cff159a133", "revision_history": [{"41": ""}, {"55": "1daea3777d9a4ac77b3108e130cf7c15c2eb3f73"}, {"57": "e96b276f7abdd72f801c7fd0352e9f4789153ba7"}, {"64": "9454c6751dc15463fc95698e521fb7cff159a133"}], "ctags": [{"_type": "tag", "name": "Image", "path": "/home/kavia/workspace/code-generation/youtube-lyrics-generator-2745-2754/python_console_app/api/agents/watcher_agent.py", "pattern": "/^    Image = None  # type: ignore$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "PyPDF2", "path": "/home/kavia/workspace/code-generation/youtube-lyrics-generator-2745-2754/python_console_app/api/agents/watcher_agent.py", "pattern": "/^    PyPDF2 = None  # type: ignore$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "WatcherAgent", "path": "/home/kavia/workspace/code-generation/youtube-lyrics-generator-2745-2754/python_console_app/api/agents/watcher_agent.py", "pattern": "/^class WatcherAgent:$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "WatcherResult", "path": "/home/kavia/workspace/code-generation/youtube-lyrics-generator-2745-2754/python_console_app/api/agents/watcher_agent.py", "pattern": "/^class WatcherResult:$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "_build_guidance_message", "path": "/home/kavia/workspace/code-generation/youtube-lyrics-generator-2745-2754/python_console_app/api/agents/watcher_agent.py", "pattern": "/^    def _build_guidance_message(self, errors: List[str]) -> str:$/", "language": "Python", "typeref": "typename:str", "kind": "member", "signature": "(self, errors: List[str])", "scope": "WatcherAgent", "scopeKind": "class"}, {"_type": "tag", "name": "_extract_text_with_ocr", "path": "/home/kavia/workspace/code-generation/youtube-lyrics-generator-2745-2754/python_console_app/api/agents/watcher_agent.py", "pattern": "/^    def _extract_text_with_ocr(self, path: str, max_pages: int = 3) -> str:$/", "language": "Python", "typeref": "typename:str", "kind": "member", "signature": "(self, path: str, max_pages: int = 3)", "scope": "WatcherAgent", "scopeKind": "class"}, {"_type": "tag", "name": "_extract_text_with_pdfplumber", "path": "/home/kavia/workspace/code-generation/youtube-lyrics-generator-2745-2754/python_console_app/api/agents/watcher_agent.py", "pattern": "/^    def _extract_text_with_pdfplumber(self, path: str) -> str:$/", "language": "Python", "typeref": "typename:str", "kind": "member", "signature": "(self, path: str)", "scope": "WatcherAgent", "scopeKind": "class"}, {"_type": "tag", "name": "_extract_text_with_pymupdf", "path": "/home/kavia/workspace/code-generation/youtube-lyrics-generator-2745-2754/python_console_app/api/agents/watcher_agent.py", "pattern": "/^    def _extract_text_with_pymupdf(self, path: str) -> str:$/", "language": "Python", "typeref": "typename:str", "kind": "member", "signature": "(self, path: str)", "scope": "WatcherAgent", "scopeKind": "class"}, {"_type": "tag", "name": "_extract_text_with_pypdf2", "path": "/home/kavia/workspace/code-generation/youtube-lyrics-generator-2745-2754/python_console_app/api/agents/watcher_agent.py", "pattern": "/^    def _extract_text_with_pypdf2(self, path: str) -> str:$/", "language": "Python", "typeref": "typename:str", "kind": "member", "signature": "(self, path: str)", "scope": "WatcherAgent", "scopeKind": "class"}, {"_type": "tag", "name": "_find_description_block", "path": "/home/kavia/workspace/code-generation/youtube-lyrics-generator-2745-2754/python_console_app/api/agents/watcher_agent.py", "pattern": "/^    def _find_description_block(self, text: str) -> str:$/", "language": "Python", "typeref": "typename:str", "kind": "member", "signature": "(self, text: str)", "scope": "WatcherAgent", "scopeKind": "class"}, {"_type": "tag", "name": "_looks_like_heading", "path": "/home/kavia/workspace/code-generation/youtube-lyrics-generator-2745-2754/python_console_app/api/agents/watcher_agent.py", "pattern": "/^    def _looks_like_heading(self, line: str) -> bool:$/", "language": "Python", "typeref": "typename:bool", "kind": "member", "signature": "(self, line: str)", "scope": "WatcherAgent", "scopeKind": "class"}, {"_type": "tag", "name": "_normalize_paragraphs", "path": "/home/kavia/workspace/code-generation/youtube-lyrics-generator-2745-2754/python_console_app/api/agents/watcher_agent.py", "pattern": "/^    def _normalize_paragraphs(self, lines: List[str]) -> str:$/", "language": "Python", "typeref": "typename:str", "kind": "member", "signature": "(self, lines: List[str])", "scope": "WatcherAgent", "scopeKind": "class"}, {"_type": "tag", "name": "_normalize_whitespace", "path": "/home/kavia/workspace/code-generation/youtube-lyrics-generator-2745-2754/python_console_app/api/agents/watcher_agent.py", "pattern": "/^    def _normalize_whitespace(self, raw: str) -> str:$/", "language": "Python", "typeref": "typename:str", "kind": "member", "signature": "(self, raw: str)", "scope": "WatcherAgent", "scopeKind": "class"}, {"_type": "tag", "name": "_pick_best_text", "path": "/home/kavia/workspace/code-generation/youtube-lyrics-generator-2745-2754/python_console_app/api/agents/watcher_agent.py", "pattern": "/^    def _pick_best_text(self, candidates: List[str]) -> str:$/", "language": "Python", "typeref": "typename:str", "kind": "member", "signature": "(self, candidates: List[str])", "scope": "WatcherAgent", "scopeKind": "class"}, {"_type": "tag", "name": "description", "path": "/home/kavia/workspace/code-generation/youtube-lyrics-generator-2745-2754/python_console_app/api/agents/watcher_agent.py", "pattern": "/^    description: Optional[str] = None$/", "language": "Python", "typeref": "typename:Optional[str]", "kind": "variable", "scope": "WatcherResult", "scopeKind": "class"}, {"_type": "tag", "name": "details", "path": "/home/kavia/workspace/code-generation/youtube-lyrics-generator-2745-2754/python_console_app/api/agents/watcher_agent.py", "pattern": "/^    details: Optional[str] = None$/", "language": "Python", "typeref": "typename:Optional[str]", "kind": "variable", "scope": "WatcherResult", "scopeKind": "class"}, {"_type": "tag", "name": "error", "path": "/home/kavia/workspace/code-generation/youtube-lyrics-generator-2745-2754/python_console_app/api/agents/watcher_agent.py", "pattern": "/^    error: Optional[str] = None$/", "language": "Python", "typeref": "typename:Optional[str]", "kind": "variable", "scope": "WatcherResult", "scopeKind": "class"}, {"_type": "tag", "name": "fitz", "path": "/home/kavia/workspace/code-generation/youtube-lyrics-generator-2745-2754/python_console_app/api/agents/watcher_agent.py", "pattern": "/^    fitz = None  # type: ignore$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "get_description_from_pdf", "path": "/home/kavia/workspace/code-generation/youtube-lyrics-generator-2745-2754/python_console_app/api/agents/watcher_agent.py", "pattern": "/^    def get_description_from_pdf(self, pdf_path: str) -> WatcherResult:$/", "language": "Python", "typeref": "typename:WatcherResult", "kind": "member", "signature": "(self, pdf_path: str)", "scope": "WatcherAgent", "scopeKind": "class"}, {"_type": "tag", "name": "pdfplumber", "path": "/home/kavia/workspace/code-generation/youtube-lyrics-generator-2745-2754/python_console_app/api/agents/watcher_agent.py", "pattern": "/^    pdfplumber = None  # type: ignore$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "pytesseract", "path": "/home/kavia/workspace/code-generation/youtube-lyrics-generator-2745-2754/python_console_app/api/agents/watcher_agent.py", "pattern": "/^    pytesseract = None  # type: ignore$/", "language": "Python", "kind": "variable"}], "hash": "f8851e4eb603d154549f54f190d15dc0", "format-version": 4, "code-base-name": "python_console_app", "filename": "python_console_app/api/agents/watcher_agent.py", "fields": [{"name": "Image = None  # type: ignore", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "PyPDF2 = None  # type: ignore", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "Optional[str] description", "scope": "WatcherResult", "scopeKind": "class", "description": "unavailable"}, {"name": "Optional[str] details", "scope": "WatcherResult", "scopeKind": "class", "description": "unavailable"}, {"name": "Optional[str] error", "scope": "WatcherResult", "scopeKind": "class", "description": "unavailable"}, {"name": "fitz = None  # type: ignore", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "pdfplumber = None  # type: ignore", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "pytesseract = None  # type: ignore", "scope": "", "scopeKind": "", "description": "unavailable"}]}